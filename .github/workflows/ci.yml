name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: extension/package-lock.json
    
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Install Node.js dependencies
      run: |
        cd extension
        npm ci
    
    - name: Lint Python code
      run: |
        cd backend
        pip install flake8
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Lint TypeScript code
      run: |
        cd extension
        npm run lint
    
    - name: Test Python code
      run: |
        cd backend
        python -m pytest tests/ -v
    
    - name: Test TypeScript code
      run: |
        cd extension
        npm run test
    
    - name: Build Docker images
      run: |
        docker-compose build
    
    - name: Start services
      run: |
        docker-compose up -d
        sleep 30
    
    - name: Run E2E tests
      run: |
        cd tests
        npm install
        npx playwright install
        npx playwright test
    
    - name: Stop services
      if: always()
      run: |
        docker-compose down

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/mirakl-tipsa-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/mirakl-tipsa-backend:${{ github.sha }}
    
    - name: Build and push extension image
      uses: docker/build-push-action@v5
      with:
        context: ./extension
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/mirakl-tipsa-extension:latest
          ${{ secrets.DOCKER_USERNAME }}/mirakl-tipsa-extension:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "This could include:"
        echo "- Updating Kubernetes manifests"
        echo "- Running helm charts"
        echo "- Updating Docker Compose files"
        echo "- Notifying deployment systems"